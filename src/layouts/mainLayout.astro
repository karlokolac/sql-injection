---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
import { ModeToggle } from "@/components/ModeToggle";
import { GithubDropdown } from "@/components/GithubComponents";
import { buttonVariants } from "@/components/ui/button";

const { title } = Astro.props;
const currentPath = Astro.url.pathname;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <ClientRouter />

    <style is:global>
      ::view-transition-old(root),
      ::view-transition-new(root) {
        animation-duration: 0.1s;
        animation-timing-function: ease-out;
      }

      .prose {
        max-width: 80ch;
      }
    </style>

    <script is:inline>
      function initializeTheme() {
        const getThemePreference = () => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        };

        const isDark = getThemePreference() === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");

        if (typeof localStorage !== "undefined") {
          const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
          });
          observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
          });
        }
      }

      initializeTheme();

      document.addEventListener("astro:after-swap", initializeTheme);
    </script>
  </head>
  <body>
    <header
      class="p-4 flex flex-row justify-between items-center z-50 top-0 sticky bg-background border-b"
    >
      <div class="hidden md:block w-18"></div>
      <nav class="gap-2 flex">
        <a
          href="/"
          class={buttonVariants({
            variant: "link",
            size: "sm",
            class: "text-lg font-semibold",
          })}
        >
          <p
            class=`${currentPath === "/" ? "text-primary" : "text-muted-foreground"}`
          >
            SQL Injection
          </p>
        </a>

        <a
          href="/form"
          class={buttonVariants({
            variant: "link",
            size: "sm",
            class: "text-lg font-semibold",
          })}
        >
          <p
            class=`${currentPath === "/form" ? "text-primary" : "text-muted-foreground"}`
          >
            Form
          </p>
        </a>
      </nav>
      <div class="gap-2 flex">
        <ModeToggle client:load />
        <GithubDropdown
          username="karlokolac"
          repo="sql-injection"
          client:load
        />
      </div>
    </header>

    <main
      class="container mx-auto prose dark:prose-invert lg:prose-lg px-4 py-6"
    >
      <slot />
    </main>
  </body>
</html>
